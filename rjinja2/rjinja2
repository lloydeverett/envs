#!/usr/bin/env xonsh

# TODO: what's missing here is a nice Python interface in addition to the shell interface
#       also, we might want to start using the jinja2 Python API rather than calling out
#       to the jinja2 binary (potentially as an opt-in though?)

import os
import sys
import argparse

parser = argparse.ArgumentParser(description="Recursively run jinja2 on files ending with '.j2' and '.j2.*'.")
parser.add_argument("directory", nargs="?", help="root directory for traversal (defaults to '.' if not present)", default=None)
parser.add_argument("--silent", action="store_true", help="suppress jinja2 invocation output")
parser.add_argument("--clean", action="store_true", help="delete output files rather than generating them (ignored if --command or --watch is specified)")
parser.add_argument("--command", type=str, help="generate files, run command (e.g. shell session), then clean and exit (ignored if --watch is specified)", default=None)
parser.add_argument("--watch", action="store_true", help="watch directory for changes and regenerate accordingly, clean and exit on interrupt (requires that inotifywait is installed)")
parser.add_argument("--stdin", action="store_true", help="read stdin into a buffer, and write buffer to stdin of each jinja2 invocation")
parser.add_argument("rest", nargs=argparse.REMAINDER, help="additional arguments passed to jinja2 binary (see jinja2 --help)")
args = parser.parse_args()

if (args.directory is not None):
    os.chdir(args.directory)

def flatten(xss):
    return [x for xs in xss for x in xs]

stdin = None
if (args.stdin):
    stdin = sys.stdin.read()

def process_cwd(clean):
    for $path in set(flatten([pg`./**/*.j2.*`, pg`./**/*.j2`])):
        $output_name = $path.name.replace('.j2.', '.')
        if $output_name.endswith('.j2'):
            $output_name = $output_name[:-len('.j2')]
        $output_path = $path.with_name($output_name)
        if not clean:
            if not args.silent:
                echo jinja2 $path -o $output_path @(args.rest)

            if args.stdin:
                printf '%s\n' @(stdin) | jinja2 $path -o $output_path @(args.rest)
            else:
                jinja2 $path -o $output_path @(args.rest)
        else:
            if not args.silent:
                echo rm $output_path

            rm $output_path

if not args.watch:
    if not args.command:
        process_cwd(args.clean)
    else:
        process_cwd(False)
        $[sh -c @(args.command)]
        process_cwd(True)
else:
    process_cwd(False)
    try:
        for line in !(inotifywait -m -e close_write .):
            lineParts = line.strip().split()
            dir = lineParts[0]
            file = lineParts[2]
            if file.startswith('.'):
                continue
            if not file.endswith('.j2') and not '.j2.' in file:
                continue
            process_cwd(False)
    except KeyboardInterrupt:
        process_cwd(True)

